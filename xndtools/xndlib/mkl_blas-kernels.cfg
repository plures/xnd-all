# This file is generated from /home/pearu/anaconda3/envs/xnd-tools/lib/python3.6/site-packages/xndtools/kernel_generator/generate_config.py and requires editing.
#  
#  Editing instructions
#  --------------------
#  
#  1.1 MODULE section contains typemaps. Check that C type is correctly
#      mapped [OPTIONAL]. Other fields can also modified.
#  
#  1.2 MODULE section contains header_code that may contain C code that
#      is inserted after include statements of extension modules source.
#  
#  2.1 KERNEL name must be changed to appropriate one [REQUIRED].
#  
#  2.2 KERNEL section contains skip field. When present, the corrsponding
#      section will be ignored. When done editing the section, you can
#      delete the skip field. [REQUIRED]
#  
#  2.3 Prototypes field contains C function prototypes as retrieved from
#      the header files. There should be no need to edit prototypes.
#      Note that within a section all prototypes must have the same
#      arguments, only their type specification may differ.
#  
#  2.4 Section contains description field that will be used as doc string
#      of the kernel. Please fill it in [OPTIONAL].
#  
#  2.5 Dimension field field is used to specify dimensions of array
#      arguments. Please fill it in as follows [REQUIRED]:
#  
#        <argument name>(<dimension spec>)
#  
#      where <dimension spec> is a comma-separated list of dimensions.
#      All arguments not specified in dimension field are considered scalars.
#  
#  2.6 Section contains input/inplace/output/hide_arguments
#      fields. Please add argument names to the field as appropiate
#      [OPTIONAL]. Initial fillment is based on the use of const in
#      prototypes.
#  
#  2.7 Section contains pre/post_call_code that may contain C code that
#      is inserted before/after the call to the backend function
#      [OPTIONAL]. This is useful in special circumstances.
#  
#  
[MODULE mkl_blas]
typemaps: 
	MKL_INT: int64
	double: float64
	float: float32
includes: 
	mkl_blas.h
include_dirs: 
	<prefix>/include
libraries: 
	
library_dirs: 
	
kinds: Xnd
ellipses: ...

[KERNEL dot]
prototypes: 
	double ddot(const MKL_INT *  n, double *  x, const MKL_INT *  incx, double *  y, const MKL_INT *  incy);
	float sdot(const MKL_INT *  n, float *  x, const MKL_INT *  incx, float *  y, const MKL_INT *  incy);
description: Compute dot product of two arrays
input: x(n), y(n)
hide: n=len(x), incx=1, incy=1

